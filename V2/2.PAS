const
	def_x_size = 5;
	def_y_size = 5;
var
	mat: array[1..def_x_size, 1..def_y_size] of integer;
	x,y,e:integer;
	
begin

	{
		...
		заполнили
		...
	}
	
	{
		...
		Вывели
		...
		
		{ 1 , 2 , 3 },
		{ 4 , 5 , 6 },
		{ x , 8 , 9 }	
	}
	
	{
		Читаем число  e
	}
	
	
	{
		Че за зверь
		exp(LN(X)* N)
		X - число , которое возводим в степень N
		
		exp(X) - функция возвращающая число e ~~ 2.7 возведенное в степень X = 2.7^x
		LN(X) - функция возвращающая натуральный логарифм по основанию e ~~ 2.7 из числа x
		
		Чтобы возвести число в степень, нужно логарифм числа умножить на показатель степени.
		Например:
			2^8. 0.3010*8=2.408. lg 256 = 2.408.
			Таким образом ln(x)*n - это умножение логарифма числа на показатель 
			степени, а exp(ln(x)*n) - возведение из логарифма в число. 
		
		Понимать это не обязательно, главное запомнить, что формулы из матана 
		можно перенести, математика работает везде
	}
	
	
	{
		Тут единственное в результате деления будут дроби и все вылетет нахуй ругаясь на несовпадение типов 
		Надо поменять  int на float
	}
	for y:=1 to def_y_size do
	begin
		for x:=1 to def_x_size do
		begin
			MAT[y,x] := (	(exp(	LN(e) * (y-x)	)) / 2	)
		end;	
	end;
	
	
	
	
	{
		...
		Вывели
		...
	}
end.